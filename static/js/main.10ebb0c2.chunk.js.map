{"version":3,"sources":["logo.svg","components/Header.js","components/Tile.js","components/Tiles.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","className","defaultProps","Tile","tile","href","url","target","src","thumb","sumVotesIncremented","spinoffCount","tiles","index","Tiles","map","App","useState","setTiles","useEffect","jQuery","when","getJSON","done","data","then","scratchpads","StrictMode","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"4PAAe,I,YCETA,EAAS,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACb,OACI,wBAAQC,UAAU,SAAlB,SACI,6BAAKD,OAKjBD,EAAOG,aAAe,CAClBF,MAAO,UAOID,QCGAI,EAnBF,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACX,OACI,oBAAGH,UAAU,OAAOI,KAAMD,EAAKE,IAAKC,OAAO,SAA3C,UAEQ,qBAAKN,UAAU,aAAf,SACI,qBAAKO,IAAK,8BAAgCJ,EAAKK,UAEnD,qBAAKR,UAAU,eAAf,SACI,6BAAKG,EAAKJ,UAGd,qBAAKC,UAAU,cAAf,SACI,4BAAIG,EAAKM,oBAAsB,eAAcN,EAAKO,aAAe,qBCArFR,EAAKD,aAAe,CAChBU,MAAO,CACH,CACIR,KAAM,MACNS,MAAO,GAEX,CACIT,KAAM,MACNS,MAAO,KAKJC,MAvBD,SAAC,GAAa,IAAZF,EAAW,EAAXA,MACZ,OACI,qBAAKX,UAAU,QAAf,SACKW,EAAMG,KAAI,SAACX,EAAMS,GAAP,OACP,cAAC,EAAD,CAAkBT,KAAMA,GAAbS,S,QC8HZG,EA5HH,WAEV,MAA0BC,oBAAS,WACjC,MAAO,MADT,mBAAOL,EAAP,KAAcM,EAAd,KA4GA,OAhCAC,qBAAU,WA2BRC,IAAOC,KA3FAD,IAAOE,QAAQ,uGAAuG,eAE5HC,MAAK,SAACC,GACL,OAAOA,MAwFiBC,MAAK,SAACD,GAC9BN,EAASM,EAAKE,kBAEf,IAGD,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,qBAAK1B,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAQD,MAAM,eACbY,GAASA,EAAMgB,OAAS,EAAI,cAAC,EAAD,CAAOhB,MAAOA,IAAY,6BClHpDiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMX,WAAP,UACE,cAAC,EAAD,MAEFY,SAASC,eAAe,SAM1BX,M","file":"static/js/main.10ebb0c2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import PropTypes from 'prop-types'\r\n\r\nconst Header = ({title}) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: \"KA API\"\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string\r\n}\r\n\r\nexport default Header\r\n","\r\n\r\nconst Tile = ({tile}) => {\r\n    return (\r\n        <a className='tile' href={tile.url} target=\"_blank\">\r\n            {/* <a href={tile.url} target=\"_blank\"> */}\r\n                <div className=\"tile-image\">\r\n                    <img src={'https://www.khanacademy.org' + tile.thumb}/>\r\n                </div>\r\n                <div className=\"tile-details\">\r\n                    <h3>{tile.title}</h3>\r\n                    {/* <p>{tile.sumVotesIncremented}</p> */}\r\n                </div>\r\n                <div className=\"tile-footer\">\r\n                    <p>{tile.sumVotesIncremented + \" Votes Â· \" + tile.spinoffCount + \" Spin-offs\"}</p>\r\n                </div>\r\n            {/* </a> */}\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default Tile\r\n","import PropTypes from 'prop-types'\r\n\r\nimport Tile from \"./Tile\"\r\n\r\nconst Tiles = ({tiles}) => {\r\n    return (\r\n        <div className=\"tiles\">\r\n            {tiles.map((tile, index) => (\r\n                <Tile key={index} tile={tile} /> \r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nTile.defaultProps = {\r\n    tiles: [\r\n        {\r\n            tile: \"Foo\",\r\n            index: 1\r\n        },\r\n        {\r\n            tile: \"Bar\",\r\n            index: 2\r\n        }\r\n    ]\r\n}\r\n\r\nexport default Tiles\r\n","import React from 'react'\nimport axios from 'axios';\nimport jQuery from 'jquery';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header';\nimport Tiles from './components/Tiles';\nimport { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, HashRouter} from 'react-router-dom'\n\nconst App = () => {\n\n  const [tiles, setTiles] = useState(() => {\n    return []\n  })\n  \n  // const fetchTilesNativeFetch = async () => {\n  //   // const result = await fetch('https://www.khanacademy.org/api/internal/user/scratchpads?username=grantjenkins&callback=?')\n  //   const result = await fetch('https://jsonplaceholder.typicode.com/posts')\n  //   const data = await result.json()\n  //   return data\n  // }\n\n  const fetchTiles = () => {  //jQuery get that works with KA API and avoids CORS policy\n    return jQuery.getJSON('https://www.khanacademy.org/api/internal/user/scratchpads?username=grantjenkins&limit=50&callback=?', () => {\n    })\n    .done((data) => {\n      return data\n    })\n};\n\n  // const fetchTilesAxiosFetch = async () => {\n  //   // const result = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n  //   const result = await axios.get(\"https://www.khanacademy.org/api/internal/user/scratchpads?username=grantjenkins&callback=?\");\n  //   console.log(result.data.scratchpads);\n  //   return result.data.scratchpads\n  // }\n\n  // const getPosts = async (data) => {\n  //   console.log(data)\n  //   setTiles(data)\n  //   return data\n  // }\n\n  // const fetchTiles = async () => {\n  //   let script = document.createElement(\"script\")\n  //   // window.callback = json => console.log(json)\n  //   script.src = \"https://jsonplaceholder.typicode.com/posts?callback=getPosts\"\n  //   document.body.appendChild(script)\n  // }\n\n  // const loadAsync = async (src) => {\n  //   const script = document.createElement('script');\n  //   script.src = src;\n  //   return new Promise((resolve, reject) => {\n  //       script.onreadystatechange = function () {\n  //           if (script.readyState === 'loaded' || script.readyState === 'complete') {\n  //               script.onreadystatechange = null;\n  //               resolve(true);\n  //           }\n  //       };\n  //       document.getElementsByTagName('head')[0].appendChild(script);\n  //   });\n  // }\n\n  // const foo = (data) => {\n  //   console.log(data)\n  // }\n\n  // function loadError(oError) {\n  //   throw new URIError(\"The script \" + oError.target.src + \" didn't load correctly.\");\n  // }\n  \n  // function affixScriptToHead(url, onloadFunction) {\n  //   var newScript = document.createElement(\"script\");\n  //   newScript.onerror = loadError;\n  //   if (onloadFunction) { newScript.onload = onloadFunction; }\n  //   document.head.appendChild(newScript);\n  //   newScript.src = url;\n  // }\n  \n  // function loadScript(src, callback) {\n  //   let script = document.createElement('script');\n  //   script.src = src;\n  //   script.onload = () => callback(script);\n  //   document.head.append(script);\n  // }\n\n  useEffect(() => {\n    // const getTiles = async () => {\n    //   const tilesFromServer = await fetchTiles()\n    //   console.log(tilesFromServer)\n    //   setTiles(tilesFromServer)\n    // }\n\n    // loadAsync(`https://www.khanacademy.org/api/internal/user/scratchpads?username=grantjenkins`).then(data => {\n    //   console.log(data)\n    //   setTiles(data)\n    // })\n\n    // getTiles()\n\n\n    // loadScript('https://www.khanacademy.org/api/internal/user/scratchpads?username=grantjenkins', data => {\n    //   console.log(\"foo\")\n    //   console.log(data)\n    //   setTiles(data.scratchpads)\n    //   // alert( _ ); // function declared in the loaded script\n    // });\n\n\n    // affixScriptToHead('https://www.khanacademy.org/api/internal/user/scratchpads?username=grantjenkins&callback=?', function (data) { \n    //   setTiles(data.scratchpads)\n    //  });\n\n    jQuery.when(fetchTiles()).then((data) => {\n      setTiles(data.scratchpads)\n    })\n  }, [])\n\n  return (\n    <React.StrictMode>\n      <HashRouter>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header title=\"jQuery v45\"/>\n            {tiles && tiles.length > 0 ? <Tiles tiles={tiles} /> : \"No tiles to show\"}\n          </div>\n        </div>\n      </HashRouter>\n    </React.StrictMode>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}